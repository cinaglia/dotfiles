# Output ssh key
sshkey() {
  cat ~/.ssh/id_rsa.pub;
}

# find shorthand
function f() {
  find . -name "$1"
}

# Create a new directory and enter it
function md() {
  mkdir -p "$@" && cd "$@"
}

function serve_and_open() {
  /usr/bin/python -m SimpleHTTPServer "$1" &
  open http://localhost:"$1"
  fg
}

# Start a static web server. Optionally pass the directory to be served.
# If one is not passed, default to the current.
# `serve 8080`, `serve ./path 8080`
function serve() {
  if [ "$#" -eq 1 ]; then
    serve_and_open "$1"
  else
    pushd "$1"; serve_and_open "$2"; popd
  fi
}

# Upload file to server and pbcopy its new url.
function scpp() {
  scp "$1" $SCP_SERVER:$SCP_SHARED_PATH;
  echo "$SCP_SHARED_URL$1" | pbcopy;
  echo "Copied to clipboard: $SCP_SHARED_URL$1"
}

# Replace tmux window title
# @see http://superuser.com/questions/249293/rename-tmux-window-name-to-prompt-command-ps1-or-remote-ssh-hostname
settitle() {
  printf "\033k$1\033\\"
}

# Override ssh command, set tmux title
ssh() {
  settitle "$*"
  command ssh "$@"
  settitle "bash"
}

# SSH Tunnel
sshtunnel() {
  ssh -D 9333 -C -N -v ${1-"$SSH_TUNNEL_HOSTNAME"} -p ${2-"22"}
}

# Kill process by name
kp() {
  if [ -z "$1" ]; then
      echo "usage: kp main.py"
      return
  fi

  kill $(ps aux | grep $1 | grep -v 'grep' | head -n 1 | cut -d \  -f 2)
}

# Print list of colors
colors() {
  for i in {0..255}; do
    printf "\x1b[38;5;${i}mcolour${i}\x1b[0m\n"
  done
}

# Confirm prompt
confirm() {
  while true; do
    read -r -n 1 -p "${1:-Continue?} [y/n]: " REPLY
    case $REPLY in
      [yY]) echo ; return 0 ;;
      [nN]) echo ; return 1 ;;
    esac
  done
}
